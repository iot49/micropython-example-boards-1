name: Compile MicroPython for boards/esp32_s3_wroom_1_n16r8.yml

on:
  push:
    branches:
      - main
    tags:
      - '*'

permissions:
  contents: write
      
jobs:
    build:
      runs-on: ubuntu-latest
  
      env:
        BOARD: ESP32_S3_WROOM_1_N16R8
        BOARD_DIR: boards/${BOARD}
        BUILD_DIR: boards/${BOARD}/build
        PORT_DIR: lib/micropython/ports/esp32
  
      steps:

      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          # submodules: 'recursive' is inefficient, as it checks out many submodules we don't need
          submodules: ''

      - name: Checkout required submodules
        run: |
          git submodule update --init lib/micropython
          cd lib/micropython; git submodule update --init lib/berkeley-db-1.xx lib/micropython-lib
      
      - name: Compile
        env:
          BUILD: /project/boards/${{ env.BOARD }}/build
        uses: espressif/esp-idf-ci-action@v1
        with:
          esp_idf_version: v5.0.4
          target: esp32s3
          path: ${{ env.BOARD_DIR }}
          command: 'make -C ../../lib/micropython/ports/esp32 submodules; \
            idf.py build; \
            cd ../../lib/micropython/ports/esp32; \
            python makeimg.py \
                $(BUILD)/sdkconfig \
                $(BUILD)/bootloader/bootloader.bin \
                $(BUILD)/partition_table/partition-table.bin \
                $(BUILD)/micropython.bin \
                $(BUILD)/firmware.bin \
                $(BUILD)/micropython.uf2'

      - name: Release
        working-directory: ${{ env.BUILD_DIR }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
        run: |
          cd ${{ env.BUILD_DIR }} && \
          gh release create "$tag" \
              --repo="$GITHUB_REPOSITORY" \
              --title="${GITHUB_REPOSITORY#*/} MicroPython $${{ env.BOARD }} ${tag#v}" \
              --generate-notes \
              micropython.bin \
              firmware.bin \
              micropython.uf2
              
      

