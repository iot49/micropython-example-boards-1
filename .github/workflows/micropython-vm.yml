name: Compile MicroPython for boards/esp32_s3

on:
  push:
    tags:
      - 'vm-**'

env:
    BOARD: ESP32_S3_N16R8



permissions:
  contents: write
      
jobs:
    build:
      runs-on: ubuntu-latest
  
      steps:

        - name: Define env
          run: |
            echo "BOARD=${BOARD}" >> $GITHUB_ENV
            echo "FROZEN_MANIFEST=src/freeze/manifest.py" >> $GITHUB_ENV
            echo "USER_C_MODULES=src/modules/micropython.cmake" >> $GITHUB_ENV
            echo "BUILD_DIR=lib/micropython/ports/esp32/build-${{ env.BOARD }}" >> $GITHUB_ENV
            echo "PORT_DIR=lib/micropython/ports/esp32" >> $GITHUB_ENV
            echo "FIRMWARE_DIR=firmware/${{ env.BOARD }}/$(date +%Y%m%d-%H%M%S)" >> $GITHUB_ENV

        - name: Display env
          run: |
            echo BOARD=${{ env.BOARD }}
            echo BUILD_DIR=${{ env.BUILD_DIR }}
            echo PORT_DIR=${{ env.PORT_DIR }}
            echo FIRWARE_DIR=${{ env.FIRMWARE_DIR }}

        - name: Checkout
          uses: actions/checkout@v4

        - name: Checkout required submodules
          run: |
            git submodule update --init lib/micropython
            cd lib/micropython; git submodule update --init lib/berkeley-db-1.xx lib/micropython-lib

        - name: Copy boards to PORT_DIR/boards
          run: |
            mkdir -p ${{ env.PORT_DIR }}/boards
            cp -a boards/${{ env.BOARD }} ${{ env.PORT_DIR }}/boards
            # Hack: sometimes (???) idf looks for custom partition table in PORT_DIR
            cp ${{ env.PORT_DIR }}/boards/${{ env.BOARD }}/partition* ${{ env.PORT_DIR }} 

        - name: Compile
          uses: addnab/docker-run-action@v3
          with:
            image: espressif/idf:v5.0.4
            shell: bash
            options: -v ${{ github.workspace }}:/project -w /project/${{ env.PORT_DIR }} -e BOARD=${{ env.BOARD }} -e FROZEN_MANIFEST=${{ env.FROZEN_MANIFEST }} -e USER_C_MODULES=${{ env.USER_C_MODULES }}
            run: |
                . $IDF_PATH/export.sh
                echo BOARD=${BOARD}
                echo FIRMWARE_DIR=${FIRMWARE_DIR}
                echo FROZEN_MANIFEST=${FROZEN_MANIFEST}
                pwd
                make -C /project/lib/micropython/mpy-cross
                make BOARD=${BOARD} clean
                make V=1 BOARD=${BOARD} \
                    USER_C_MODULES=/project/${USER_C_MODULES} \
                    FROZEN_MANIFEST=/project/${FROZEN_MANIFEST}
                  
        - name: Release
          working-directory: ${BUILD_DIR}
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            tag: ${{ github.ref_name }}
          run: |
            pwd
            ls -l
            gh release create "$tag" \
                --repo="$GITHUB_REPOSITORY" \
                --title="${GITHUB_REPOSITORY#*/} MicroPython VM for ${BOARD} ${tag#v}" \
                --generate-notes \
                firmware.bin micropython.bin micropython.uf2
                
          
    